%!PS-Adobe-2.0
%%Title: pdisp.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed May 18 08:11:20 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (pdisp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (L.T. Kong,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed May 18 08:11:20 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
980 640 M
63 0 V
5857 0 R
-63 0 V
stroke
860 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
980 1129 M
63 0 V
5857 0 R
-63 0 V
stroke
860 1129 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
980 1619 M
63 0 V
5857 0 R
-63 0 V
stroke
860 1619 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MRshow
1.000 UL
LTb
980 2108 M
63 0 V
5857 0 R
-63 0 V
stroke
860 2108 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3)]
] -66.7 MRshow
1.000 UL
LTb
980 2598 M
63 0 V
5857 0 R
-63 0 V
stroke
860 2598 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MRshow
1.000 UL
LTb
980 3087 M
63 0 V
5857 0 R
-63 0 V
stroke
860 3087 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
980 3576 M
63 0 V
5857 0 R
-63 0 V
stroke
860 3576 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MRshow
1.000 UL
LTb
980 4066 M
63 0 V
5857 0 R
-63 0 V
stroke
860 4066 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 7)]
] -66.7 MRshow
1.000 UL
LTb
980 4555 M
63 0 V
5857 0 R
-63 0 V
stroke
860 4555 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 8)]
] -66.7 MRshow
1.000 UL
LTb
980 640 M
0 63 V
0 4097 R
0 -63 V
stroke
980 440 M
[ [(Symbol) 200.0 0.0 true true 0 (G)]
] -66.7 MCshow
1.000 UL
LTb
2174 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2174 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (X)]
] -66.7 MCshow
1.000 UL
LTb
2771 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2771 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (W)]
] -66.7 MCshow
1.000 UL
LTb
3369 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3369 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (X')]
] -66.7 MCshow
1.000 UL
LTb
5437 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5437 440 M
[ [(Symbol) 200.0 0.0 true true 0 (G)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6900 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (L)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
980 4800 N
980 640 L
5920 0 V
0 4160 V
-5920 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (n)]
[(Helvetica) 200.0 0.0 true true 0 ( \(THz\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3940 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (q)]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LT8
2174 640 M
0 4160 V
2771 640 M
0 4160 V
3369 640 M
0 4160 V
5437 640 M
0 4160 V
stroke
LTb
1.000 UL
LTb
5264 4553 M
[ [(Helvetica) 200.0 0.0 true true 0 (LD)]
] -66.7 MRshow
5384 4553 M
543 0 V
980 640 M
50 170 V
50 169 V
49 168 V
50 165 V
50 162 V
50 159 V
49 153 V
50 149 V
50 143 V
50 136 V
49 129 V
50 122 V
50 114 V
50 105 V
49 96 V
50 87 V
50 78 V
50 67 V
50 58 V
49 47 V
50 37 V
50 27 V
50 16 V
49 5 V
150 -5 V
149 -13 V
149 -14 V
149 -5 V
150 5 V
149 14 V
149 13 V
150 5 V
86 -7 V
86 -24 V
86 -38 V
86 -53 V
87 -67 V
86 -80 V
86 -91 V
86 -102 V
86 -112 V
87 -119 V
86 -126 V
86 -130 V
86 -135 V
86 -136 V
87 -138 V
86 -139 V
86 -138 V
86 -136 V
86 -136 V
86 -133 V
87 -133 V
86 -130 V
86 -130 V
86 -129 V
61 107 V
61 106 V
61 105 V
61 104 V
61 102 V
61 99 V
61 96 V
61 94 V
61 89 V
61 86 V
61 81 V
61 76 V
61 71 V
61 66 V
60 61 V
61 54 V
61 49 V
61 42 V
61 36 V
61 30 V
61 23 V
61 17 V
61 10 V
61 3 V
980 640 M
50 170 V
50 169 V
49 168 V
50 165 V
50 162 V
50 159 V
49 153 V
50 149 V
50 143 V
50 136 V
49 129 V
50 122 V
50 114 V
50 105 V
49 96 V
50 87 V
50 78 V
50 67 V
50 58 V
49 47 V
50 37 V
stroke 2025 3154 M
50 27 V
50 16 V
49 5 V
150 65 V
149 175 V
149 238 V
149 253 V
150 -253 V
149 -238 V
149 -175 V
150 -65 V
86 21 V
86 61 V
86 91 V
86 111 V
87 119 V
86 114 V
86 100 V
86 76 V
86 -79 V
87 -152 V
86 -165 V
86 -178 V
86 -189 V
86 -199 V
87 -207 V
86 -215 V
86 -222 V
86 -227 V
86 -231 V
86 -235 V
87 -237 V
86 -239 V
86 -240 V
86 -240 V
61 107 V
61 106 V
61 105 V
61 104 V
61 102 V
61 99 V
61 96 V
61 94 V
61 89 V
61 86 V
61 81 V
61 76 V
61 71 V
61 66 V
60 61 V
61 54 V
61 49 V
61 42 V
61 36 V
61 30 V
61 23 V
61 17 V
61 10 V
61 3 V
980 640 M
50 215 V
50 216 V
49 215 V
50 216 V
50 215 V
50 215 V
49 214 V
50 213 V
50 209 V
50 207 V
49 201 V
50 195 V
50 188 V
50 178 V
49 167 V
50 155 V
50 141 V
50 125 V
50 109 V
49 90 V
50 72 V
50 51 V
50 32 V
49 10 V
150 -38 V
149 -112 V
149 -178 V
149 -228 V
150 228 V
149 178 V
149 112 V
150 38 V
86 -8 V
86 -26 V
86 -42 V
86 -59 V
87 -76 V
86 -92 V
86 -108 V
86 -123 V
86 -13 V
87 12 V
86 -26 V
86 -66 V
stroke 4403 3862 M
86 -105 V
86 -145 V
87 -182 V
86 -218 V
86 -249 V
86 -278 V
86 -303 V
86 -323 V
87 -340 V
86 -353 V
86 -361 V
86 -365 V
61 235 V
61 235 V
61 233 V
61 231 V
61 229 V
61 226 V
61 221 V
61 216 V
61 211 V
61 204 V
61 195 V
61 187 V
61 177 V
61 167 V
60 154 V
61 141 V
61 127 V
61 112 V
61 97 V
61 79 V
61 63 V
61 46 V
61 27 V
61 9 V
1.000 UP
stroke
LT0
LTb
5264 4353 M
[ [(Helvetica) 200.0 0.0 true true 0 (MD)]
] -66.7 MRshow
LT0
980 640 CircleF
1113 1086 CircleF
1245 1482 CircleF
1378 1836 CircleF
1511 2183 CircleF
1644 2468 CircleF
1776 2669 CircleF
1909 2810 CircleF
2042 2989 CircleF
2174 3086 CircleF
2174 3086 CircleF
2324 3052 CircleF
2473 3014 CircleF
2622 3011 CircleF
2771 2987 CircleF
2771 2987 CircleF
2921 3011 CircleF
3070 3014 CircleF
3219 3052 CircleF
3369 3086 CircleF
3369 3086 CircleF
3516 3059 CircleF
3664 2955 CircleF
3812 2802 CircleF
3960 2658 CircleF
4107 2526 CircleF
4255 2345 CircleF
4403 2098 CircleF
4551 1906 CircleF
4698 1706 CircleF
4846 1452 CircleF
4994 1243 CircleF
5142 1069 CircleF
5290 939 CircleF
5437 640 CircleF
5600 1010 CircleF
5762 1150 CircleF
5925 1442 CircleF
6087 1608 CircleF
6250 1768 CircleF
6412 1941 CircleF
6575 2042 CircleF
6737 2114 CircleF
6900 2086 CircleF
5655 4353 CircleF
1.000 UP
1.000 UL
LT0
980 640 CircleF
1113 1177 CircleF
1245 1495 CircleF
1378 1866 CircleF
1511 2221 CircleF
1644 2503 CircleF
1776 2716 CircleF
1909 2865 CircleF
2042 3047 CircleF
2174 3112 CircleF
2174 3112 CircleF
2324 3137 CircleF
2473 3310 CircleF
2622 3493 CircleF
2771 3709 CircleF
2771 3709 CircleF
2921 3493 CircleF
3070 3310 CircleF
3219 3137 CircleF
3369 3112 CircleF
3369 3112 CircleF
3516 3101 CircleF
3664 3228 CircleF
3812 3418 CircleF
3960 3592 CircleF
4107 3645 CircleF
4255 3398 CircleF
4403 3104 CircleF
4551 2813 CircleF
4698 2481 CircleF
4846 2143 CircleF
4994 1812 CircleF
5142 1419 CircleF
5290 1080 CircleF
5437 640 CircleF
5437 640 CircleF
5600 1047 CircleF
5762 1172 CircleF
5925 1446 CircleF
6087 1627 CircleF
6250 1798 CircleF
6412 1993 CircleF
6575 2095 CircleF
6737 2166 CircleF
6900 2164 CircleF
1.000 UP
1.000 UL
LT0
980 640 CircleF
1113 1320 CircleF
1245 1912 CircleF
1378 2419 CircleF
1511 2907 CircleF
1644 3344 CircleF
1776 3729 CircleF
1909 3984 CircleF
2042 4194 CircleF
2174 4307 CircleF
2174 4307 CircleF
2324 4228 CircleF
2473 4161 CircleF
2622 3958 CircleF
2771 3768 CircleF
2771 3768 CircleF
2921 3958 CircleF
3070 4161 CircleF
3219 4228 CircleF
3369 4307 CircleF
3369 4307 CircleF
3516 4231 CircleF
3664 4178 CircleF
3812 4056 CircleF
3960 3876 CircleF
4107 3744 CircleF
4255 3788 CircleF
4403 3786 CircleF
4551 3585 CircleF
4698 3296 CircleF
4846 2924 CircleF
4994 2507 CircleF
5142 1894 CircleF
5290 1295 CircleF
5437 640 CircleF
5437 640 CircleF
5600 1316 CircleF
5762 1934 CircleF
5925 2503 CircleF
6087 3018 CircleF
6250 3422 CircleF
6412 3778 CircleF
6575 4038 CircleF
6737 4224 CircleF
6900 4327 CircleF
1.000 UP
1.000 UL
LT2
LTb
5264 4153 M
[ [(Helvetica) 200.0 0.0 true true 0 (expr)]
] -66.7 MRshow
LT2
1219 1834 BoxF
1338 2382 BoxF
1458 2842 BoxF
1577 3293 BoxF
1697 3645 BoxF
1816 3899 BoxF
1935 4017 BoxF
2055 4139 BoxF
2174 4164 BoxF
1219 1423 BoxF
1338 1790 BoxF
1458 2133 BoxF
1577 2436 BoxF
1697 2681 BoxF
1816 2886 BoxF
1935 3028 BoxF
2055 3121 BoxF
2174 3131 BoxF
5230 1599 BoxF
5024 2436 BoxF
4817 3102 BoxF
4610 3576 BoxF
4403 3748 BoxF
4196 3748 BoxF
3989 3645 BoxF
3782 3435 BoxF
3369 3131 BoxF
5230 1188 BoxF
5024 1788 BoxF
4817 2309 BoxF
4610 2759 BoxF
4403 3146 BoxF
4196 3459 BoxF
3989 3767 BoxF
3782 3963 BoxF
3576 4105 BoxF
3369 4164 BoxF
4920 1487 BoxF
4817 1653 BoxF
4610 1976 BoxF
4403 2299 BoxF
4196 2524 BoxF
3989 2759 BoxF
3782 2940 BoxF
3576 3053 BoxF
3369 3131 BoxF
5584 1237 BoxF
5730 1859 BoxF
5876 2397 BoxF
6022 2877 BoxF
6169 3312 BoxF
6315 3665 BoxF
6461 3924 BoxF
6607 4071 BoxF
6754 4144 BoxF
6900 4208 BoxF
5730 1120 BoxF
5876 1345 BoxF
6022 1565 BoxF
6169 1766 BoxF
6315 1957 BoxF
6461 2098 BoxF
6607 2211 BoxF
6754 2289 BoxF
6900 2309 BoxF
2771 3033 BoxF
2891 3072 BoxF
3010 3087 BoxF
3130 3097 BoxF
3249 3112 BoxF
3369 3131 BoxF
5655 4153 BoxF
1.000 UL
LTb
980 4800 N
980 640 L
5920 0 V
0 4160 V
-5920 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
